<project name="propel" default="main">

  <!--
    Note - You should not have to edit this file.

    Instead, if calling build-propel.xml directly, edit the build.properties
    that is in the same directory. If calling build-propel.xml via another
    build file, you can also use the build.properties in the same directory,
    or set the property propel.contextProperties to the file
    to use in place of build.properties (e.g. project.properties).
  -->

  <property name="build.properties" value="build.properties"/>
  <property name="propel.contextProperties" value="./${build.properties}"/>
  <property name="propel.home" value="."/>

  <available file="${propel.home}/build.properties" property="globalBuildPopertiesExists"/>

  <if>
  	<and>
  		<isset property="globalBuildPopertiesExists"/>
  	</and>
  	<then>
	    <property file="${propel.home}/build.properties"/>
    </then>
  </if>

  <!--
    The default.properties file will map old properties to the new ones along
    with setting the corret defaults.
  -->
  <property file="${propel.home}/default.properties"/>

  <!--
    Do forward declarations of all of our tasks to
    centralize them and clean up the targets.
  -->

  <path id="propelclasses">
    <pathelement dir="${propel.home}/src"/>
    <pathelement dir="${propel.project.dir}/"/>
  </path>

  <includepath classpath="${propel.home}/../../src" />

   <taskdef
    name="propel-schema-reverse"
    classname="Propel.Generator.Task.PropelSchemaReverseTaskCompat" />
  <taskdef
    name="propel-sql-diff"
    classname="Propel.Generator.Task.PropelSQLDiffTaskCompat" />

  <!-- ================================================================ -->
  <!-- M A I N  T A R G E T                                             -->
  <!-- ================================================================ -->
  <!-- This default target will run all the targets that generate       -->
  <!-- source. You will probably only run this target once then         -->
  <!-- call individual targets as necessary to update your sources      -->
  <!-- when you change your XML schema.                                 -->
  <!-- ================================================================ -->

  <target
    name="main"
    description="==> generates sql + om classes">

    <phingcall target="convert-conf"/>
  </target>

  <!-- ================================================================ -->
  <!-- C H E C K  R U N  O N L Y  O N  S C H E M A  C H A N G E         -->
  <!-- ================================================================ -->
  <!-- Maps the propel.runOnlyOnSchemaChange to                         -->
  <!-- propel.internal.runOnlyOnSchemaChange                            -->
  <!-- ================================================================ -->

  <target name="check-run-only-on-schema-change">
    <condition property="propel.internal.runOnlyOnSchemaChange">
      <equals arg1="${propel.runOnlyOnSchemaChange}" arg2="true"/>
    </condition>
  </target>

  <!-- ================================================================ -->
  <!-- G E N E R A T E  P R O J E C T  S Q L                            -->
  <!-- ================================================================ -->
  <!-- Generate the SQL for your project, These are in addition         -->
  <!-- to the base Turbine tables! The tables you require for your      -->
  <!-- project should be specified in project-schema.xml.               -->
  <!-- ================================================================ -->

  <!--	temporary target to check whether postgres is being used with identifier quoting ON.
		If so, a warning is issued, since identifier quoting is only paritally implemented & this point.  -->
  <target name="pgsql-quoting-check">
  	<if>
  		<and>
			<equals arg1="${propel.database}" arg2="pgsql"/>
			<equals arg1="${propel.disableIdentifierQuoting}" arg2=""/>
		</and>
		<then>
			<warn>ATTENTION: It appears you are using PostgreSQL and you have identifier-quoting turned on.</warn>
			<warn>It is suggested that you disable identifier quoting when using PostgreSQL -- especially if you</warn>
			<warn>have case-sensitive columns in your database.</warn>
			<warn></warn>
			<warn>To disable identifier quoting, add the following property to your build.properties (or specify</warn>
			<warn>it using -D on commandline):</warn>
			<warn></warn>
			<warn>propel.disableIdentifierQuoting=true</warn>
			<warn></warn>
			<warn>You can ignore this warning if you understand the issues related to case-sensitivity and Propel's</warn>
			<warn>DDL-only implementation of identifier quoting.</warn>
		</then>
	</if>
  </target>

  <!-- ================================================================ -->
  <!-- C R E A T E  T A R G E T  D A T A B A S E                        -->
  <!-- ================================================================ -->
  <!-- Create the target database by executing a generated script       -->
  <!-- that is capable of performing the task.                          -->
  <!-- ================================================================ -->

  <target name="create-db-check">
    <condition property="propel.internal.manualCreation">
      <equals arg1="${propel.database.manualCreation}" arg2="true"/>
    </condition>
  </target>

  <target
    name="create-db"
    unless="propel.internal.manualCreation"
    depends="create-db-check"
    description="==> generates the target database">

    <fail message="create-db target temporarily disabled, while we replace creole components."/>

	<!--
    <echo message="Executing the create-db.sql script ..."/>

    <sql
      autocommit="true"
      driver="${propel.database.driver}"
      onerror="continue"
      src="${propel.sql.dir}/create-db.sql"
      url="${propel.database.createUrl}"
    />
    -->
  </target>

  <!-- ================================================================ -->
  <!-- N E W   R E V E R S E   T O   X M L                              -->
  <!-- ================================================================ -->

  <target
    name="reverse"
    description="==> generate xml schema from reverse-engineered database (new)">

    <echo message="+-----------------------------------------------+"/>
    <echo message="|                                               |"/>
    <echo message="| Generating XML from PDO connection !          |"/>
    <echo message="|                                               |"/>
    <echo message="+-----------------------------------------------+"/>

    <propel-schema-reverse
      databaseName="${propel.project}"
      dbSchema="${propel.database.schema}"
      dbEncoding="${propel.database.encoding}"
      url="${propel.database.buildUrl}"
      userId="${propel.database.user}"
      password="${propel.database.password}"
      outputFile="${propel.schema.dir}/${propel.default.schema.basename}.xml"
      samePhpName="${propel.samePhpName}"
      addVendorInfo="${propel.addVendorInfo}"
      addValidators="${propel.addValidators}"
    />

  </target>

  <!-- ================================================================ -->
  <!-- M I G R A T I O N   T A S K S                                    -->
  <!-- ================================================================ -->

  <target
    name="sql-diff"
    depends="pgsql-quoting-check"
    unless="propel.internal.sql.uptodate"
    description="==> generates a SQL diff for your project">

    <echo message="+----------------------------------------------+"/>
    <echo message="|                                              |"/>
    <echo message="| Generating SQL diff between the XML schemas  |"/>
    <echo message="| and the current database structure.          |"/>
    <echo message="|                                              |"/>
    <echo message="+----------------------------------------------+"/>

    <phingcall target="sql-diff-template"/>
  </target>

  <target name="sql-diff-template">
    <propel-sql-diff
      validate="${propel.schema.validate}"
      xsd="${propel.schema.xsd.file}"
      xsl="${propel.schema.xsl.file}"
      outputDirectory="${propel.migration.dir}"
      targetDatabase="${propel.database}"
      packageObjectModel="${propel.packageObjectModel}"
      databaseName="${propel.project}"
      url="${propel.database.url}"
      userId="${propel.database.user}"
      password="${propel.database.password}"
      editorCmd="${propel.migration.editor}"
      caseInsensitive="${propel.migration.caseInsensitive}">
      <mapper type="glob" from="${propel.sql.mapper.from}" to="${propel.sql.mapper.to}"/>
      <schemafileset dir="${propel.schema.dir}"
        includes="${propel.schema.sql.includes}"
        excludes="${propel.schema.sql.excludes}"
      />
    </propel-sql-diff>
  </target>

  <target
    name="dbd2propel"
    description="==> generates a Propel XML schema from a DBDesigner 4 XML schema">

    <echo message="+------------------------------------------+"/>
    <echo message="|                                          |"/>
    <echo message="|      Generating Propel XML Schema        |"/>
    <echo message="|      Based on DB4Designer export         |"/>
    <echo message="|                                          |"/>
    <echo message="+------------------------------------------+"/>

    <xslt todir="${propel.schema.dir}" style="${propel.dbd2propel.xsl.file}" >
      <fileset dir="${propel.dbd2propel.dir}">
        <include name="${propel.dbd2propel.includes}" />
      </fileset>
      <mapper type="regexp" from="^(.*)\.xml$" to="\1.schema.xml"/>
    </xslt>
  </target>
</project>
